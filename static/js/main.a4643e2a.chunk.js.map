{"version":3,"sources":["Firebase/Firebase.js","comps/Post.js","comps/Modal_setup.js","comps/ImgUpload.js","comps/LoadingSpinner.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","storage","Post","props","useState","comments","setComments","cmntCount","setCmntCount","cmnt","setCmnt","useEffect","postID","collection","doc","orderBy","onSnapshot","snap","docs","map","index","id","text","data","setTimeout","length","className","Avatar","type","alt","username","src","imgUrl","caption","comm","comment","user","Input","onChange","e","target","value","disableUnderline","placeholder","Button","color","disabled","onClick","preventDefault","add","timeStamp","FieldValue","serverTimestamp","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","SimpleModal","classes","React","modalStyle","openSignup","setOpenSignup","openLogin","setOpenLogin","setUser","email","setEmail","pass","setPass","currentUser","setCurrentUser","loggedIn","setLoggedIn","successMsg","setSuccessMsg","log_inOut","onAuthStateChanged","auth_user","variant","signOut","endIcon","Modal","open","onClose","style","process","startAdornment","InputAdornment","AccountCircle","fullWidth","createUserWithEmailAndPassword","then","document","querySelector","focus","updateProfile","displayName","catch","error","alert","message","signInWithEmailAndPassword","err","ImgUpload","setCaption","file","setFile","progress","setProgress","openImgUpload","setOpenImgUpload","file_and_caption","useRef","handleFile","files","handleUpload","ref","name","put","on","prog","Math","round","bytesTransferred","totalBytes","console","log","child","getDownloadURL","downlaodURL","max","TextareaAutosize","rowsMax","aria-label","current","display","LoadingSpinner","App","posts","setPosts","posts_loaded","setPosts_loaded","online","setOnline","checkLogin","setCheckLogin","window","navigator","onLine","onFocus","objects","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"sTAYMA,EADaC,IAASC,cATL,CACpBC,OAAQ,0CACRC,WAAY,wCACZC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,8CAIYC,YAEhBC,EAAOT,IAASS,OAChBC,EAAUV,IAASU,U,OC2HVC,MA/Hf,SAAcC,GACX,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,mBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAmCA,OAjCAC,qBAAU,WACHR,EAAMS,QACPtB,EAAGuB,WAAW,SACVC,IAAIX,EAAMS,QACVC,WAAW,YACXE,QAAQ,YAAa,OACrBC,YAAW,SAACC,GACVX,EACGW,EAAKC,KAAKC,KAAI,SAACL,EAAKM,GACjB,MAAO,CAAEC,GAAIP,EAAIO,GAAIC,KAAMR,EAAIS,iBAK9C,CAACpB,EAAMS,SAeVY,YAAW,WACRhB,EAAaH,EAASoB,UACtB,KAGA,sBAAKC,UAAU,OAAf,UACG,sBAAKA,UAAU,mBAAf,UACG,sBAAMA,UAAU,iBAAhB,SACG,cAACC,EAAA,EAAD,CACGC,KAAK,SACLC,IAAK1B,EAAM2B,SACXC,IAAI,kCAGV,wBAAQL,UAAU,mBAAlB,SAAsCvB,EAAM2B,cAE/C,qBAAKJ,UAAU,cAAf,SACIvB,EAAM6B,OACJ,qBACGD,IAAK5B,EAAM6B,OACXH,IAAI,iBACJH,UAAU,oBAGb,qBAAKA,UAAU,kBAAf,SACG,8BACG,cAAC,IAAD,CAAkBA,UAAU,yBAD/B,wBAEwB,uBAFxB,uCAOT,sBAAKA,UAAU,oBAAf,UACG,yBAAQA,UAAU,oBAAlB,cAAwCvB,EAAM2B,YAC9C,sBAAMJ,UAAU,gBAAhB,SAAiCvB,EAAM8B,aAE1C,sBAAKP,UAAU,sBAAf,UACG,qBAAKA,UAAU,wBAAf,SACG,mCAASnB,EAAT,iBAEFA,EACE,qBAAKmB,UAAU,qCAAf,SACIrB,EAASc,KAAI,SAACe,GACZ,OACG,sBAEGR,UAAU,gCAFb,UAIG,mCAASQ,EAAKZ,KAAKQ,SAAnB,OACA,uBACA,+BAAOI,EAAKZ,KAAKa,YALZD,EAAKb,SAWtB,qBAAKK,UAAU,0BAAf,SACG,8BACG,cAAC,IAAD,IADH,uBAMT,qBAAKA,UAAU,mBAAf,SACIvB,EAAMiC,KACJ,uBAAMV,UAAU,mBAAhB,UACG,cAACW,EAAA,EAAD,CACGX,UAAU,oBACVY,SAAU,SAACC,GAAD,OAAO7B,EAAQ6B,EAAEC,OAAOC,QAClCA,MAAOhC,EACPiC,kBAAkB,EAClBC,YAAY,oBAEf,cAACC,EAAA,EAAD,CACGhB,KAAK,SACLF,UAAU,qBACVmB,MAAM,UACNC,UAAWrC,EACXsC,QA1FD,SAACR,GACfA,EAAES,iBAEF1D,EAAGuB,WAAW,SAASC,IAAIX,EAAMS,QAAQC,WAAW,YAAYoC,IAAI,CACjEnB,SAAU3B,EAAMiC,KAChBD,QAAS1B,EACTyC,UAAW3D,IAASQ,UAAUoD,WAAWC,oBAG5C1C,EAAQ,KA4EI,SAOG,cAAC,IAAD,CAAUgB,UAAU,iCAI1B,qBAAKA,UAAU,cAAf,SACG,6E,uFCvHlB,SAAS2B,IAIN,MAAO,CACJC,IAAI,GAAD,OAJM,GAIN,KACHC,KAAK,GAAD,OAJM,GAIN,KACJC,UAAU,cAAD,OANA,GAMA,eALC,GAKD,OAIf,IAAMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACtCC,MAAO,CACJC,SAAU,WACVC,MAAO,IACPC,gBAAiBJ,EAAMK,QAAQC,WAAWL,MAC1CM,OAAQ,iBACRC,UAAWR,EAAMS,QAAQ,GACzBC,QAASV,EAAMW,QAAQ,EAAG,EAAG,QAIpB,SAASC,EAAYpE,GACjC,IAAMqE,EAAUf,IAEhB,EAAqBgB,IAAMrE,SAASiD,GAA7BqB,EAAP,oBACA,EAAoCD,IAAMrE,UAAS,GAAnD,mBAAOuE,EAAP,KAAmBC,EAAnB,KACA,EAAkCxE,oBAAS,GAA3C,mBAAOyE,EAAP,KAAkBC,EAAlB,KAEA,EAAwB1E,mBAAS,IAAjC,mBAAOgC,EAAP,KAAa2C,EAAb,KACA,EAA0B3E,mBAAS,IAAnC,mBAAO4E,EAAP,KAAcC,EAAd,KACA,EAAwB7E,mBAAS,IAAjC,mBAAO8E,EAAP,KAAaC,EAAb,KAEA,EAAsC/E,mBAAS,MAA/C,mBAAOgF,EAAP,KAAoBC,EAApB,KACA,EAAgCjF,oBAAS,GAAzC,mBAAOkF,EAAP,KAAiBC,EAAjB,KACA,EAAoCnF,mBAAS,IAA7C,mBAAOoF,EAAP,KAAmBC,EAAnB,KACA9E,qBAAU,WACP,IAAM+E,EAAY1F,EAAK2F,oBAAmB,SAACC,GAIrCP,EAFCO,GAKc,SAIrB,OAAO,WAEJF,OAEH,CAACtD,EAAMgD,IA2CV,OACG,sBAAK1D,UAAU,iBAAf,UACI4D,EACE,cAAC1C,EAAA,EAAD,CACGlB,UAAU,yBACVmE,QAAQ,WACRhD,MAAM,YACNE,QAAS,WACN/C,EAAK8F,UACLP,GAAY,IAEfQ,QAAS,cAAC,IAAD,IARZ,qBAaA,sBAAKrE,UAAU,iCAAf,UACG,cAACkB,EAAA,EAAD,CACGlB,UAAU,yBACVmE,QAAQ,YACRhD,MAAM,UACNE,QAAS,kBAAM6B,GAAc,IAJhC,qBAQA,cAAChC,EAAA,EAAD,CACGlB,UAAU,wBACVmE,QAAQ,YACRhD,MAAM,UACNE,QAAS,kBAAM+B,GAAa,IAJ/B,uBAUN,cAACkB,EAAA,EAAD,CACGtE,UAAU,eACVuE,KAAMtB,EACNuB,QAAS,kBAAMtB,GAAc,IAHhC,SAKG,sBAAKuB,MAAOzB,EAAYhD,UAAW8C,EAAQZ,MAA3C,UACG,qBAAKlC,UAAU,uBAAf,SACG,qBACGK,IAAKqE,oCACLvE,IAAI,YACJH,UAAU,yBAGhB,uBAAMA,UAAU,uBAAhB,UACG,sBAAKA,UAAU,mBAAf,UACG,qBAAKA,UAAU,wBAAf,SACG,cAACW,EAAA,EAAD,CACGgE,eACG,cAACC,EAAA,EAAD,CAAgBzC,SAAS,QAAzB,SACG,cAAC0C,EAAA,EAAD,MAGNC,WAAW,EACX7D,YAAY,WACZjB,UAAU,OACVY,SAAU,SAACC,GAAD,OAAOwC,EAAQxC,EAAEC,OAAOC,QAClCA,MAAOL,MAGb,qBAAKV,UAAU,yBAAf,SACG,cAACW,EAAA,EAAD,CACGgE,eACG,cAACC,EAAA,EAAD,CAAgBzC,SAAS,QAAzB,SACG,cAAC,IAAD,MAGN2C,WAAW,EACX7D,YAAY,QACZjB,UAAU,OACVE,KAAK,QACLU,SAAU,SAACC,GAAD,OAAO0C,EAAS1C,EAAEC,OAAOC,QACnCA,MAAOuC,MAGb,qBAAKtD,UAAU,wBAAf,SACG,cAACW,EAAA,EAAD,CACGgE,eACG,cAACC,EAAA,EAAD,CACGT,QAAQ,WACRhC,SAAS,QAFZ,SAIG,cAAC,IAAD,MAGN2C,WAAW,EACX7D,YAAY,WACZjB,UAAU,OACVE,KAAK,WACLU,SAAU,SAACC,GAAD,OAAO4C,EAAQ5C,EAAEC,OAAOC,QAClCA,MAAOyC,SAIhB,qBAAKxD,UAAU,qCAAf,SACG,cAACkB,EAAA,EAAD,CACGhB,KAAK,SACLiE,QAAQ,YACRhD,MAAM,UACNE,QAhJN,SAACR,GACbA,EAAES,iBAEFhD,EACIyG,+BAA+BzB,EAAOE,GACtCwB,MAAK,SAACd,GACJhB,GAAc,GACdW,GAAY,GAEZE,EAAc,yCACdX,GAAa,GAEb6B,SAASC,cAAc,sBAAsBC,QAE7CjB,EAAUxD,KAAK0E,cAAc,CAC1BC,YAAa3E,OAGlB4E,OAAM,SAACC,GACLC,MAAMD,EAAME,YAGlBhC,EAAQ,KAsHO,+BAaZ,cAACa,EAAA,EAAD,CACGtE,UAAU,cACVuE,KAAMpB,EACNqB,QAAS,kBAAMpB,GAAa,IAH/B,SAKG,sBAAKqB,MAAOzB,EAAYhD,UAAW8C,EAAQZ,MAA3C,UACG,qBAAKlC,UAAU,uBAAf,SACG,qBACGK,IAAKqE,oCACLvE,IAAI,YACJH,UAAU,yBAGf8D,EACE,qBAAK9D,UAAU,6CAAf,SACG,4BAAI8D,MAEN,KACJ,uBAAM9D,UAAU,uBAAhB,UACG,sBAAKA,UAAU,mBAAf,UACG,qBAAKA,UAAU,yBAAf,SACG,cAACW,EAAA,EAAD,CACGgE,eACG,cAACC,EAAA,EAAD,CAAgBzC,SAAS,QAAzB,SACG,cAAC,IAAD,MAGN2C,WAAW,EACX7D,YAAY,QACZjB,UAAU,OACVE,KAAK,QACLU,SAAU,SAACC,GAAD,OAAO0C,EAAS1C,EAAEC,OAAOC,QACnCA,MAAOuC,MAGb,qBAAKtD,UAAU,wBAAf,SACG,cAACW,EAAA,EAAD,CACGgE,eACG,cAACC,EAAA,EAAD,CACGT,QAAQ,WACRhC,SAAS,QAFZ,SAIG,cAAC,IAAD,MAGN2C,WAAW,EACX7D,YAAY,WACZjB,UAAU,OACVE,KAAK,WACLU,SAAU,SAACC,GAAD,OAAO4C,EAAQ5C,EAAEC,OAAOC,QAClCA,MAAOyC,SAIhB,qBAAKxD,UAAU,qCAAf,SACG,cAACkB,EAAA,EAAD,CACGhB,KAAK,SACLiE,QAAQ,YACRhD,MAAM,UACNE,QA5LP,SAACR,GACZA,EAAES,iBAEFhD,EACIoH,2BAA2BpC,EAAOE,GAClCwB,MAAK,WACH5B,GAAa,GACbS,GAAY,GACZoB,SAASC,cAAc,sBAAsBC,WAE/CG,OAAM,SAACK,GAAD,OAASH,MAAMG,EAAIF,YAE7BpC,EAAQ,IACRE,EAAS,IACTE,EAAQ,KA0KO,iC,+CC/HNmC,MAzIf,SAAmBnH,GAChB,MAA8BC,mBAAS,IAAvC,mBAAO6B,EAAP,KAAgBsF,EAAhB,KACA,EAAwBnH,mBAAS,MAAjC,mBAAOoH,EAAP,KAAaC,EAAb,KACA,EAAgCrH,mBAAS,GAAzC,mBAAOsH,EAAP,KAAiBC,EAAjB,KAEA,EAA0CvH,oBAAS,GAAnD,mBAAOwH,EAAP,KAAsBC,EAAtB,KAEMC,EAAmBC,iBAAO,MAE1BC,EAAa,SAACzF,GACbA,EAAEC,OAAOyF,MAAM,IAChBR,EAAQlF,EAAEC,OAAOyF,MAAM,KAIvBC,EAAe,SAAC3F,GACnBA,EAAES,iBACgB/C,EAAQkI,IAAR,gBAAqBX,EAAKY,OAAQC,IAAIb,GAC9Cc,GACP,iBACA,SAACrH,GACE,IAAMsH,EAAOC,KAAKC,MACdxH,EAAKyH,iBAAmBzH,EAAK0H,WAAc,KAE/ChB,EAAYY,MAEf,SAAClB,GACEuB,QAAQC,IAAIxB,GACZH,MAAMG,EAAIF,YAEb,WACGlH,EACIkI,IAAI,SACJW,MAAMtB,EAAKY,MACXW,iBACArC,MAAK,SAACsC,GACJ1J,EAAGuB,WAAW,SAASoC,IAAI,CACxBhB,QAASA,EACTD,OAAQgH,EACRlH,SAAU3B,EAAM2B,SAChBoB,UAAW3D,IAASQ,UAAUoD,WAAWC,uBAKlDuE,EAAY,GACZJ,EAAW,IACXE,EAAQ,UAejB,OAAOC,EAAW,EACf,sBAAKhG,UAAU,iCAAf,UACG,sBAAKA,UAAU,yBAAf,UACG,0BAAUe,MAAOiF,EAAUuB,IAAI,QAC/B,uBAAMvH,UAAU,kBAAhB,UAAmCgG,EAAnC,UAEH,sBAAKhG,UAAU,wCAAf,UACG,qBAAKA,UAAU,yBAAyBY,SAAU0F,EAAlD,SACG,cAAC3F,EAAA,EAAD,CAAOmE,WAAW,EAAM5E,KAAK,OAAOkB,UAAQ,MAE/C,sBAAKpB,UAAU,0BAAf,UACG,cAACwH,EAAA,EAAD,CACGxH,UAAU,oBACVyH,QAAS,EACTC,aAAW,iBACXzG,YAAY,kBACZL,SAAU,SAACC,GAAD,OAAOgF,EAAWhF,EAAEC,OAAOC,QACrCA,MAAOR,EACPa,UAAQ,IAEX,cAACF,EAAA,EAAD,CACGlB,UAAU,kBACVmE,QAAQ,YACR9C,QAASmF,EACTpF,UAAQ,EAJX,0BAUN,oBAAGpB,UAAU,8BAAb,wBACc,mDAIjB,sBAAKA,UAAU,iCAAf,UACG,qBACGA,UAAU,iCACVqB,QAhDe,WACjB6E,GACDC,GAAiB,GACjBC,EAAiBuB,QAAQlD,MAAMmD,QAAU,SAEzCzB,GAAiB,GACjBC,EAAiBuB,QAAQlD,MAAMmD,QAAU,YAwCzC,SAII1B,EACE,cAAC,IAAD,IAEA,cAAC,IAAD,MAGN,sBAAKO,IAAKL,EAAkBpG,UAAU,iBAAtC,UACG,qBAAKA,UAAU,yBAAyBY,SAAU0F,EAAlD,SACG,cAAC3F,EAAA,EAAD,CAAOmE,WAAW,EAAM5E,KAAK,WAEhC,sBAAKF,UAAU,0BAAf,UACG,cAACwH,EAAA,EAAD,CACGxH,UAAU,oBACVyH,QAAS,EACTC,aAAW,iBACXzG,YAAY,kBACZL,SAAU,SAACC,GAAD,OAAOgF,EAAWhF,EAAEC,OAAOC,QACrCA,MAAOR,IAEV,cAACW,EAAA,EAAD,CACGlB,UAAU,kBACVmE,QAAQ,YACR9C,QAASmF,EAHZ,0BASN,oBAAGxG,UAAU,8BAAb,wBACc,oDChIR6H,MAVf,WACG,OACG,sBAAK7H,UAAU,eAAf,UACG,wBACA,wBACA,4BC0FM8H,MAvFf,WACG,MAA0BpJ,mBAAS,IAAnC,mBAAOqJ,EAAP,KAAcC,EAAd,KACA,EAAwCtJ,oBAAS,GAAjD,mBAAOuJ,EAAP,KAAqBC,EAArB,KACA,EAAwBxJ,mBAAS,IAAjC,mBAAOgC,EAAP,KAAa2C,EAAb,KACA,EAA4B3E,mBAAS,MAArC,mBAAOyJ,EAAP,KAAeC,EAAf,KACA,EAAoC1J,oBAAS,GAA7C,mBAAO2J,EAAP,KAAmBC,EAAnB,KA0BA,OAxBArJ,qBAAU,WACPX,EAAK2F,oBAAmB,SAACC,GAClBA,GACDb,EAAQa,EAAUmB,aAClBiD,GAAc,IAEdjF,EAAQ,SAIdzF,EAAGuB,WAAW,SACVE,QAAQ,YAAa,QACrBC,YAAW,SAACC,GACVyI,EACGzI,EAAKC,KAAKC,KAAI,SAACL,GACZ,MAAO,CAAEO,GAAIP,EAAIO,GAAIoI,MAAO3I,EAAIS,YAGtCqI,GAAgB,MAGtBE,EAAUG,OAAOC,UAAUC,UAC3B,CAACJ,IAGD,sBAAKrI,UAAU,sBAAf,UACG,uBAAOL,GAAG,oBAAoB+I,QAAS,kBAAMJ,GAAc,MAC3D,sBAAKtI,UAAU,kBAAf,UACG,oBAAIA,UAAU,gBAAd,wBACA,cAAC,EAAD,OAEH,qBAAKA,UAAU,gCAAf,SACImI,EACE,qBAAKnI,UAAU,uCAAf,SACIiI,EACE,8BACIF,EAAMtI,KAAI,SAACkJ,GACT,OACG,cAAC,EAAD,CAEGvI,SAAUuI,EAAQZ,MAAM3H,SACxBE,OAAQqI,EAAQZ,MAAMzH,OACtBC,QAASoI,EAAQZ,MAAMxH,QACvBrB,OAAQyJ,EAAQhJ,GAChBe,KAAMA,GALDiI,EAAQhJ,SAWzB,qBAAKK,UAAU,yBAAf,SACG,cAAC,EAAD,QAKT,qBAAIA,UAAU,+BAAd,UACG,cAAC,IAAD,CAAkBA,UAAU,qBAD/B,kCAMLmI,EACE,qBAAKnI,UAAU,8BAAf,SACIU,EACE,cAAC,EAAD,CAAWN,SAAUM,IAErB,gCACG,+DACA,oBAAGV,UAAU,kCAAb,wBACc,qDAKtB,SChFE4I,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9D,MAAK,YAAkD,IAA/C+D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACN,cAAC,IAAMC,WAAP,UACG,cAAC,EAAD,MAEHrE,SAASsE,eAAe,SAM3BX,M","file":"static/js/main.a4643e2a.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n   apiKey: \"AIzaSyAC9hO8YwdE9xszyiTTF5awZU3-PxYfed0\",\r\n   authDomain: \"instagram-clone-aa0c4.firebaseapp.com\",\r\n   projectId: \"instagram-clone-aa0c4\",\r\n   storageBucket: \"instagram-clone-aa0c4.appspot.com\",\r\n   messagingSenderId: \"299510752861\",\r\n   appId: \"1:299510752861:web:4f1eb80f88ea5c5019cfb4\",\r\n};\r\n\r\nconst fb_connect = firebase.initializeApp(firebaseConfig);\r\nconst db = fb_connect.firestore();\r\n\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n\r\nexport { db, auth, storage };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\r\nimport { Button, Input } from \"@material-ui/core\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\n\r\nimport { db } from \"../Firebase/Firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction Post(props) {\r\n   const [comments, setComments] = useState([]);\r\n   const [cmntCount, setCmntCount] = useState(0);\r\n   const [cmnt, setCmnt] = useState(\"\");\r\n\r\n   useEffect(() => {\r\n      if (props.postID) {\r\n         db.collection(\"posts\")\r\n            .doc(props.postID)\r\n            .collection(\"comments\")\r\n            .orderBy(\"timeStamp\", \"asc\")\r\n            .onSnapshot((snap) => {\r\n               setComments(\r\n                  snap.docs.map((doc, index) => {\r\n                     return { id: doc.id, text: doc.data() };\r\n                  })\r\n               );\r\n            });\r\n      }\r\n   }, [props.postID]);\r\n   /* if any variable used inside useEffect then it's better to use them inside this array. */\r\n\r\n   const postCmnt = (e) => {\r\n      e.preventDefault();\r\n\r\n      db.collection(\"posts\").doc(props.postID).collection(\"comments\").add({\r\n         username: props.user,\r\n         comment: cmnt,\r\n         timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      });\r\n\r\n      setCmnt(\"\");\r\n   };\r\n\r\n   setTimeout(() => {\r\n      setCmntCount(comments.length);\r\n   }, 1000);\r\n\r\n   return (\r\n      <div className=\"post\">\r\n         <div className=\"post__header p-2\">\r\n            <span className=\"header__avatar\">\r\n               <Avatar\r\n                  type=\"button\"\r\n                  alt={props.username}\r\n                  src=\"/static/images/avatar/1.jpg\"\r\n               />\r\n            </span>\r\n            <strong className=\"header__username\">{props.username}</strong>\r\n         </div>\r\n         <div className=\"post__image\">\r\n            {props.imgUrl ? (\r\n               <img\r\n                  src={props.imgUrl}\r\n                  alt=\"Failed to load\"\r\n                  className=\"image img-fluid\"\r\n               />\r\n            ) : (\r\n               <div className=\"image__errorMsg\">\r\n                  <p>\r\n                     <ErrorOutlineIcon className=\"image__errorMsg-icon\" />\r\n                     Failed to load Image <br /> Please check your connection\r\n                  </p>\r\n               </div>\r\n            )}\r\n         </div>\r\n         <div className=\"post__caption p-2\">\r\n            <strong className=\"caption__username\">@{props.username}</strong>\r\n            <span className=\"caption__text\">{props.caption}</span>\r\n         </div>\r\n         <div className=\"post__show-comments\">\r\n            <div className=\"show-comments__header\">\r\n               <strong>{cmntCount} Comments</strong>\r\n            </div>\r\n            {cmntCount ? (\r\n               <div className=\"show-comments__allComments-wrapper\">\r\n                  {comments.map((comm) => {\r\n                     return (\r\n                        <div\r\n                           key={comm.id}\r\n                           className=\"show-comments__single-comment\"\r\n                        >\r\n                           <strong>{comm.text.username} </strong>\r\n                           <br />\r\n                           <span>{comm.text.comment}</span>\r\n                        </div>\r\n                     );\r\n                  })}\r\n               </div>\r\n            ) : (\r\n               <div className=\"show-comments__emptyMsg\">\r\n                  <p>\r\n                     <HighlightOffIcon /> No Comments\r\n                  </p>\r\n               </div>\r\n            )}\r\n         </div>\r\n         <div className=\"post__commentBox\">\r\n            {props.user ? (\r\n               <form className=\"commentBox__form\">\r\n                  <Input\r\n                     className=\"commentBox__input\"\r\n                     onChange={(e) => setCmnt(e.target.value)}\r\n                     value={cmnt}\r\n                     disableUnderline={true}\r\n                     placeholder=\"Write a comment\"\r\n                  />\r\n                  <Button\r\n                     type=\"submit\"\r\n                     className=\"commentBox__button\"\r\n                     color=\"primary\"\r\n                     disabled={!cmnt}\r\n                     onClick={postCmnt}\r\n                  >\r\n                     <SendIcon className=\"commentBox__button-icon\" />\r\n                  </Button>\r\n               </form>\r\n            ) : (\r\n               <div className=\"text-center\">\r\n                  <p>Please login to comment on this post</p>\r\n               </div>\r\n            )}\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Post;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Modal, Input, Button, InputAdornment } from \"@material-ui/core\";\r\nimport { AccountCircle } from \"@material-ui/icons\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\r\nimport ExitToAppOutlinedIcon from \"@material-ui/icons/ExitToAppOutlined\";\r\n\r\nimport { auth } from \"../Firebase/Firebase\";\r\n\r\nfunction getModalStyle() {\r\n   const top = 50;\r\n   const left = 50;\r\n\r\n   return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n   };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   paper: {\r\n      position: \"absolute\",\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"2px solid #000\",\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n   },\r\n}));\r\n\r\nexport default function SimpleModal(props) {\r\n   const classes = useStyles();\r\n   // getModalStyle is not a pure function, we roll the style only on the first render\r\n   const [modalStyle] = React.useState(getModalStyle);\r\n   const [openSignup, setOpenSignup] = React.useState(false);\r\n   const [openLogin, setOpenLogin] = useState(false);\r\n\r\n   const [user, setUser] = useState(\"\");\r\n   const [email, setEmail] = useState(\"\");\r\n   const [pass, setPass] = useState(\"\");\r\n\r\n   const [currentUser, setCurrentUser] = useState(null);\r\n   const [loggedIn, setLoggedIn] = useState(false);\r\n   const [successMsg, setSuccessMsg] = useState(\"\");\r\n   useEffect(() => {\r\n      const log_inOut = auth.onAuthStateChanged((auth_user) => {\r\n         /* it collects the Session/Cookies of a user -> to get if the user is logged in or out */\r\n         if (auth_user) {\r\n            // if the user logged in\r\n            setCurrentUser(auth_user); // collect all the info about user\r\n         } else {\r\n            // user has logged out\r\n            setCurrentUser(null);\r\n         }\r\n      });\r\n\r\n      return () => {\r\n         // perform some cleanup actions\r\n         log_inOut();\r\n      };\r\n   }, [user, currentUser]);\r\n\r\n   const Signup = (e) => {\r\n      e.preventDefault();\r\n\r\n      auth\r\n         .createUserWithEmailAndPassword(email, pass)\r\n         .then((auth_user) => {\r\n            setOpenSignup(false);\r\n            setLoggedIn(false);\r\n\r\n            setSuccessMsg(\"Signed Up Seccessfully! Please Login.\");\r\n            setOpenLogin(true);\r\n\r\n            document.querySelector(\"#for_setCheckLogin\").focus();\r\n\r\n            auth_user.user.updateProfile({\r\n               displayName: user,\r\n            });\r\n         })\r\n         .catch((error) => {\r\n            alert(error.message);\r\n         });\r\n\r\n      setPass(\"\");\r\n   };\r\n   const Login = (e) => {\r\n      e.preventDefault();\r\n\r\n      auth\r\n         .signInWithEmailAndPassword(email, pass)\r\n         .then(() => {\r\n            setOpenLogin(false);\r\n            setLoggedIn(true);\r\n            document.querySelector(\"#for_setCheckLogin\").focus();\r\n         })\r\n         .catch((err) => alert(err.message));\r\n\r\n      setUser(\"\");\r\n      setEmail(\"\");\r\n      setPass(\"\");\r\n   };\r\n\r\n   return (\r\n      <div className=\"modalContainer\">\r\n         {loggedIn ? (\r\n            <Button\r\n               className=\"modalContainer__button\"\r\n               variant=\"outlined\"\r\n               color=\"secondary\"\r\n               onClick={() => {\r\n                  auth.signOut();\r\n                  setLoggedIn(false);\r\n               }}\r\n               endIcon={<ExitToAppOutlinedIcon />}\r\n            >\r\n               Log Out\r\n            </Button>\r\n         ) : (\r\n            <div className=\"modalContainer__registerButton\">\r\n               <Button\r\n                  className=\"registerButton__signup\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => setOpenSignup(true)}\r\n               >\r\n                  Sing Up\r\n               </Button>\r\n               <Button\r\n                  className=\"registerButton__login\"\r\n                  variant=\"contained\"\r\n                  color=\"inherit\"\r\n                  onClick={() => setOpenLogin(true)}\r\n               >\r\n                  Log In\r\n               </Button>\r\n            </div>\r\n         )}\r\n         <Modal\r\n            className=\"signup_modal\"\r\n            open={openSignup}\r\n            onClose={() => setOpenSignup(false)}\r\n         >\r\n            <div style={modalStyle} className={classes.paper}>\r\n               <div className=\"modalContainer__logo\">\r\n                  <img\r\n                     src={process.env.PUBLIC_URL + \"/Images/insta_logo.jpg\"}\r\n                     alt=\"Inta logo\"\r\n                     className=\"img-fluid logo_img\"\r\n                  />\r\n               </div>\r\n               <form className=\"modalContainer__form\">\r\n                  <div className=\"form__inputField\">\r\n                     <div className=\"inputField__userInput\">\r\n                        <Input\r\n                           startAdornment={\r\n                              <InputAdornment position=\"start\">\r\n                                 <AccountCircle />\r\n                              </InputAdornment>\r\n                           }\r\n                           fullWidth={true}\r\n                           placeholder=\"Username\"\r\n                           className=\"ml-2\"\r\n                           onChange={(e) => setUser(e.target.value)}\r\n                           value={user}\r\n                        />\r\n                     </div>\r\n                     <div className=\"inputField__emailInput\">\r\n                        <Input\r\n                           startAdornment={\r\n                              <InputAdornment position=\"start\">\r\n                                 <EmailIcon />\r\n                              </InputAdornment>\r\n                           }\r\n                           fullWidth={true}\r\n                           placeholder=\"Email\"\r\n                           className=\"ml-2\"\r\n                           type=\"email\"\r\n                           onChange={(e) => setEmail(e.target.value)}\r\n                           value={email}\r\n                        />\r\n                     </div>\r\n                     <div className=\"inputField__passInput\">\r\n                        <Input\r\n                           startAdornment={\r\n                              <InputAdornment\r\n                                 variant=\"outlined\"\r\n                                 position=\"start\"\r\n                              >\r\n                                 <VpnKeyIcon />\r\n                              </InputAdornment>\r\n                           }\r\n                           fullWidth={true}\r\n                           placeholder=\"Password\"\r\n                           className=\"ml-2\"\r\n                           type=\"password\"\r\n                           onChange={(e) => setPass(e.target.value)}\r\n                           value={pass}\r\n                        />\r\n                     </div>\r\n                  </div>\r\n                  <div className=\"form__submitButton text-right mt-4\">\r\n                     <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={Signup}\r\n                     >\r\n                        Sign Up\r\n                     </Button>\r\n                  </div>\r\n               </form>\r\n            </div>\r\n         </Modal>\r\n\r\n         <Modal\r\n            className=\"login_modal\"\r\n            open={openLogin}\r\n            onClose={() => setOpenLogin(false)}\r\n         >\r\n            <div style={modalStyle} className={classes.paper}>\r\n               <div className=\"modalContainer__logo\">\r\n                  <img\r\n                     src={process.env.PUBLIC_URL + \"/Images/insta_logo.jpg\"}\r\n                     alt=\"Inta logo\"\r\n                     className=\"img-fluid logo_img\"\r\n                  />\r\n               </div>\r\n               {successMsg ? (\r\n                  <div className=\"signedUp_msg mt-1 text-center text-success\">\r\n                     <p>{successMsg}</p>\r\n                  </div>\r\n               ) : null}\r\n               <form className=\"modalContainer__form\">\r\n                  <div className=\"form__inputField\">\r\n                     <div className=\"inputField__emailInput\">\r\n                        <Input\r\n                           startAdornment={\r\n                              <InputAdornment position=\"start\">\r\n                                 <EmailIcon />\r\n                              </InputAdornment>\r\n                           }\r\n                           fullWidth={true}\r\n                           placeholder=\"Email\"\r\n                           className=\"ml-2\"\r\n                           type=\"email\"\r\n                           onChange={(e) => setEmail(e.target.value)}\r\n                           value={email}\r\n                        />\r\n                     </div>\r\n                     <div className=\"inputField__passInput\">\r\n                        <Input\r\n                           startAdornment={\r\n                              <InputAdornment\r\n                                 variant=\"outlined\"\r\n                                 position=\"start\"\r\n                              >\r\n                                 <VpnKeyIcon />\r\n                              </InputAdornment>\r\n                           }\r\n                           fullWidth={true}\r\n                           placeholder=\"Password\"\r\n                           className=\"ml-2\"\r\n                           type=\"password\"\r\n                           onChange={(e) => setPass(e.target.value)}\r\n                           value={pass}\r\n                        />\r\n                     </div>\r\n                  </div>\r\n                  <div className=\"form__submitButton text-right mt-4\">\r\n                     <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"inherit\"\r\n                        onClick={Login}\r\n                     >\r\n                        Log In\r\n                     </Button>\r\n                  </div>\r\n               </form>\r\n            </div>\r\n         </Modal>\r\n      </div>\r\n   );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\n\r\nimport { Input, Button, TextareaAutosize } from \"@material-ui/core\";\r\nimport ExpandLessRoundedIcon from \"@material-ui/icons/ExpandLessRounded\";\r\nimport ExpandMoreRoundedIcon from \"@material-ui/icons/ExpandMoreRounded\";\r\n\r\nimport { db, storage } from \"../Firebase/Firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction ImgUpload(props) {\r\n   const [caption, setCaption] = useState(\"\");\r\n   const [file, setFile] = useState(null);\r\n   const [progress, setProgress] = useState(0);\r\n\r\n   const [openImgUpload, setOpenImgUpload] = useState(true);\r\n\r\n   const file_and_caption = useRef(null);\r\n\r\n   const handleFile = (e) => {\r\n      if (e.target.files[0]) {\r\n         setFile(e.target.files[0]);\r\n      }\r\n   };\r\n\r\n   const handleUpload = (e) => {\r\n      e.preventDefault();\r\n      const uploading = storage.ref(`files/${file.name}`).put(file);\r\n      uploading.on(\r\n         \"state_changed\",\r\n         (snap) => {\r\n            const prog = Math.round(\r\n               (snap.bytesTransferred / snap.totalBytes) * 100\r\n            );\r\n            setProgress(prog);\r\n         },\r\n         (err) => {\r\n            console.log(err);\r\n            alert(err.message);\r\n         },\r\n         () => {\r\n            storage\r\n               .ref(\"files\")\r\n               .child(file.name)\r\n               .getDownloadURL()\r\n               .then((downlaodURL) => {\r\n                  db.collection(\"posts\").add({\r\n                     caption: caption,\r\n                     imgUrl: downlaodURL,\r\n                     username: props.username,\r\n                     timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                  });\r\n               });\r\n            /* storing the file to the firebase [Storage] and getting a [Download Url] and then adding the url to the [Firebase db collection] */\r\n\r\n            setProgress(0);\r\n            setCaption(\"\");\r\n            setFile(null);\r\n         }\r\n      );\r\n   };\r\n\r\n   const handleIconClick = () => {\r\n      if (openImgUpload) {\r\n         setOpenImgUpload(false);\r\n         file_and_caption.current.style.display = \"none\";\r\n      } else {\r\n         setOpenImgUpload(true);\r\n         file_and_caption.current.style.display = \"initial\";\r\n      }\r\n   };\r\n\r\n   return progress > 0 ? (\r\n      <div className=\"imgUpload text-center bg-white\">\r\n         <div className=\"imgUpload__progressBar\">\r\n            <progress value={progress} max=\"100\" />\r\n            <span className=\"parcentage ml-2\">{progress}%</span>\r\n         </div>\r\n         <div className=\"imgUpload__actOnUpload low_visibility\">\r\n            <div className=\"imgUpload__choose-file\" onChange={handleFile}>\r\n               <Input fullWidth={true} type=\"file\" disabled />\r\n            </div>\r\n            <div className=\"imgUpload__caption my-4\">\r\n               <TextareaAutosize\r\n                  className=\"caption__inputBox\"\r\n                  rowsMax={4}\r\n                  aria-label=\"maximum height\"\r\n                  placeholder=\"Write a Caption\"\r\n                  onChange={(e) => setCaption(e.target.value)}\r\n                  value={caption}\r\n                  disabled\r\n               />\r\n               <Button\r\n                  className=\"caption__button\"\r\n                  variant=\"contained\"\r\n                  onClick={handleUpload}\r\n                  disabled\r\n               >\r\n                  Upload\r\n               </Button>\r\n            </div>\r\n         </div>\r\n         <p className=\"owener_name text-center m-0\">\r\n            Created By <strong>MD Omar</strong>\r\n         </p>\r\n      </div>\r\n   ) : (\r\n      <div className=\"imgUpload text-center bg-white\">\r\n         <div\r\n            className=\"imgUpload__upIcon rounded-pill\"\r\n            onClick={handleIconClick}\r\n         >\r\n            {openImgUpload ? (\r\n               <ExpandMoreRoundedIcon />\r\n            ) : (\r\n               <ExpandLessRoundedIcon />\r\n            )}\r\n         </div>\r\n         <div ref={file_and_caption} className=\"actOnIconClick\">\r\n            <div className=\"imgUpload__choose-file\" onChange={handleFile}>\r\n               <Input fullWidth={true} type=\"file\" />\r\n            </div>\r\n            <div className=\"imgUpload__caption my-4\">\r\n               <TextareaAutosize\r\n                  className=\"caption__inputBox\"\r\n                  rowsMax={4}\r\n                  aria-label=\"maximum height\"\r\n                  placeholder=\"Write a Caption\"\r\n                  onChange={(e) => setCaption(e.target.value)}\r\n                  value={caption}\r\n               />\r\n               <Button\r\n                  className=\"caption__button\"\r\n                  variant=\"contained\"\r\n                  onClick={handleUpload}\r\n               >\r\n                  Upload\r\n               </Button>\r\n            </div>\r\n         </div>\r\n         <p className=\"owener_name text-center m-0\">\r\n            Created By <strong>MD Omar</strong>\r\n         </p>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default ImgUpload;\r\n","import React from \"react\";\r\n\r\nfunction LoadingSpinner() {\r\n   return (\r\n      <div className=\"lds-facebook\">\r\n         <div></div>\r\n         <div></div>\r\n         <div></div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default LoadingSpinner;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./Sass/main.css\";\nimport Post from \"./comps/Post\";\nimport { db, auth } from \"./Firebase/Firebase\";\nimport Modal from \"./comps/Modal_setup\";\nimport ImgUpload from \"./comps/ImgUpload\";\nimport LoadingSpinner from \"./comps/LoadingSpinner\";\n\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\n\nfunction App() {\n   const [posts, setPosts] = useState([]);\n   const [posts_loaded, setPosts_loaded] = useState(false);\n   const [user, setUser] = useState(\"\");\n   const [online, setOnline] = useState(null);\n   const [checkLogin, setCheckLogin] = useState(false);\n\n   useEffect(() => {\n      auth.onAuthStateChanged((auth_user) => {\n         if (auth_user) {\n            setUser(auth_user.displayName);\n            setCheckLogin(false);\n         } else {\n            setUser(null);\n         }\n      });\n\n      db.collection(\"posts\")\n         .orderBy(\"timeStamp\", \"desc\")\n         .onSnapshot((snap) => {\n            setPosts(\n               snap.docs.map((doc) => {\n                  return { id: doc.id, posts: doc.data() };\n               })\n            );\n            setPosts_loaded(true);\n         });\n\n      setOnline(window.navigator.onLine);\n   }, [checkLogin]);\n\n   return (\n      <div className=\"app container-fluid\">\n         <input id=\"for_setCheckLogin\" onFocus={() => setCheckLogin(true)} />\n         <div className=\"app__header p-2\">\n            <h3 className=\"header__title\">Post Media</h3>\n            <Modal />\n         </div>\n         <div className=\"app__body row container-fluid\">\n            {online ? (\n               <div className=\"app__posts col-10 col-md-10 col-lg-4\">\n                  {posts_loaded ? (\n                     <div>\n                        {posts.map((objects) => {\n                           return (\n                              <Post\n                                 key={objects.id}\n                                 username={objects.posts.username}\n                                 imgUrl={objects.posts.imgUrl}\n                                 caption={objects.posts.caption}\n                                 postID={objects.id}\n                                 user={user}\n                              />\n                           );\n                        })}\n                     </div>\n                  ) : (\n                     <div className=\"posts__loading-spinner\">\n                        <LoadingSpinner />\n                     </div>\n                  )}\n               </div>\n            ) : (\n               <h1 className=\"app__body-offlineMsg mx-auto\">\n                  <ErrorOutlineIcon className=\"offlineMsg__icon\" /> No Internet\n                  Connection !!\n               </h1>\n            )}\n         </div>\n         {online ? (\n            <div className=\"app__upload container-fluid\">\n               {user ? (\n                  <ImgUpload username={user} />\n               ) : (\n                  <div>\n                     <h1>You need to login for Posting</h1>\n                     <p className=\"upload__owener-name text-center\">\n                        Created By <strong>MD Omar</strong>\n                     </p>\n                  </div>\n               )}\n            </div>\n         ) : null}\n      </div>\n   );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}